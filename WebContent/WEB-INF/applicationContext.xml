<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.0.xsd   
	http://www.springframework.org/schema/tx   
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
	http://www.springframework.org/schema/aop    
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<context:annotation-config />

	<context:component-scan base-package="com.ecannetwork">
		<context:exclude-filter expression="com.ecannetwork.*controller.*Controller"
			type="regex" />
	</context:component-scan>

	<context:property-placeholder location="classpath*:db.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="maxActive">
			<value>${dbcp.maxActive}</value>
		</property>
		<property name="maxIdle">
			<value>${dbcp.maxIdle}</value>
		</property>
		<property name="maxWait">
			<value>${dbcp.maxWait}</value>
		</property>
		<property name="defaultAutoCommit">
			<value>${dbcp.defaultAutoCommit}</value>
		</property>
	</bean>

	<bean id="myIntercept" class="com.ecannetwork.core.i18n.I18NHibernateInterceptor" />
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="lobHandler">
			<ref bean="lobHandler" />
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="entityInterceptor">
			<ref bean="myIntercept" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- <prop key="hibernate.cache.provider_class"> org.hibernate.cache.EhCacheProvider 
					</prop> <prop key="hibernate.cache.use_query_cache">true</prop> -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>${hibernate.hbm}</value>
			</list>
		</property>
		<!-- <property name="mappingJarLocations" value="classpath*:hbm/mysql/*.hbm.xml"></property> -->
	</bean>
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- 事务拦截器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*TX" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务拦截包配置 myproject..*Service.*(..)，对package com.UserService 的方法都拦截 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* 
		com.ecannetwork..*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<import resource="applicationContext-utils.xml" />
</beans>